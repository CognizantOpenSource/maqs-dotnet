name: Build
on:
  push:
    branches:
      - master
      - feature/AllBuildsToAction
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Manual'  
jobs:
  test-untils:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - id: builder
        uses: ./.github/workflows/buildtest-action
        with:
          bt-param: 'Framework/UtilitiesUnitTests/UtilitiesUnitTests.csproj --logger trx --results-directory "${{github.workspace}}/artifactTests/one/" /p:CoverletOutput="${{github.workspace}}/artifactTests/one/" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
      - run: echo random-numberz ${{ steps.builder.outputs.random-number }}
        shell: pwsh
      - uses: actions/upload-artifact@v2
        name: "Upload test artifact"
        with:
          name: testsOne
          path: |
            artifactTests/one/**/*.xml
            artifactTests/one/**/*.trx
   
  test-untilstwo:
    name: BuildTwo
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - id: builder
        uses: ./.github/workflows/buildtest-action
        with:
          bt-param: 'Framework/UtilitiesUnitTests/UtilitiesUnitTests.csproj --logger trx --results-directory "${{github.workspace}}/artifactTests/two/" /p:CoverletOutput="${{github.workspace}}/artifactTests/two/"  /p:CollectCoverage=true /p:CoverletOutputFormat=opencover' 
          artifact-name: 'utils'
      - run: echo random-numberz ${{ steps.builder.outputs.random-number }}
        shell: pwsh
      - uses: actions/upload-artifact@v2
        name: "Upload test artifact"
        with:
          name: testsTwo
          path: |
            artifactTests/two/**/*.xml
            artifactTests/two/**/*.trx
        
  sonar:
    name: Sonar
    runs-on: windows-latest
    needs: [test-untils, test-untilstwo]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/download-artifact@v2
        with:
          path: Results
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"MAQS" /o:"magenic" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml  /d:sonar.cs.dotcover.reportsPaths=**/*.coverage
          dotnet build Framework/Base.sln
          # dotnet test Framework/UtilitiesUnitTests/UtilitiesUnitTests.csproj  /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
